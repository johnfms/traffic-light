
GccApplication1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000188  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         0000000a  00800060  00000188  000001fc  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      00000030  00000000  00000000  00000206  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000238  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000028  00000000  00000000  00000274  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   000006da  00000000  00000000  0000029c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000005dc  00000000  00000000  00000976  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000002af  00000000  00000000  00000f52  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000050  00000000  00000000  00001204  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    0000036b  00000000  00000000  00001254  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    0000017e  00000000  00000000  000015bf  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000018  00000000  00000000  0000173d  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
   8:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
   c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  10:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  14:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  18:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  1c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  20:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  24:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  28:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  2c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  30:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  34:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  38:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  3c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  40:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  44:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  48:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  4c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  50:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	e8 e8       	ldi	r30, 0x88	; 136
  68:	f1 e0       	ldi	r31, 0x01	; 1
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	aa 36       	cpi	r26, 0x6A	; 106
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>
  76:	0e 94 6c 00 	call	0xd8	; 0xd8 <main>
  7a:	0c 94 c2 00 	jmp	0x184	; 0x184 <_exit>

0000007e <__bad_interrupt>:
  7e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000082 <count.1732>:
int main(void){
	char sseg [10]={0b00111111,0b00000110,0b01011011,0b01001111,0b01100110,0b01101101,0b01111101,0b00000111,0b01111111,0b01101111};
	DDRA=255;
	DDRB=255;
	DDRD=255;
	    void count(int start){
  82:	2f 92       	push	r2
  84:	3f 92       	push	r3
  86:	9c 01       	movw	r18, r24
		    for(int i=start ;i>0;i--){
  88:	21 c0       	rjmp	.+66     	; 0xcc <count.1732+0x4a>
			    int n1=0,n2=0;
			    n2=i/10;
  8a:	c9 01       	movw	r24, r18
  8c:	6a e0       	ldi	r22, 0x0A	; 10
  8e:	70 e0       	ldi	r23, 0x00	; 0
  90:	0e 94 9a 00 	call	0x134	; 0x134 <__divmodhi4>
			    n1=i-n2*10;
  94:	46 ef       	ldi	r20, 0xF6	; 246
  96:	46 03       	mulsu	r20, r22
  98:	f0 01       	movw	r30, r0
  9a:	47 9f       	mul	r20, r23
  9c:	f0 0d       	add	r31, r0
  9e:	11 24       	eor	r1, r1
  a0:	e2 0f       	add	r30, r18
  a2:	f3 1f       	adc	r31, r19
				PORTA=sseg[n1];
  a4:	e2 0d       	add	r30, r2
  a6:	f3 1d       	adc	r31, r3
  a8:	80 81       	ld	r24, Z
  aa:	8b bb       	out	0x1b, r24	; 27
				PORTB=sseg[n2];
  ac:	f1 01       	movw	r30, r2
  ae:	e6 0f       	add	r30, r22
  b0:	f7 1f       	adc	r31, r23
  b2:	80 81       	ld	r24, Z
  b4:	88 bb       	out	0x18, r24	; 24
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  b6:	4f e9       	ldi	r20, 0x9F	; 159
  b8:	86 e8       	ldi	r24, 0x86	; 134
  ba:	91 e0       	ldi	r25, 0x01	; 1
  bc:	41 50       	subi	r20, 0x01	; 1
  be:	80 40       	sbci	r24, 0x00	; 0
  c0:	90 40       	sbci	r25, 0x00	; 0
  c2:	e1 f7       	brne	.-8      	; 0xbc <count.1732+0x3a>
  c4:	00 c0       	rjmp	.+0      	; 0xc6 <count.1732+0x44>
  c6:	00 00       	nop
	char sseg [10]={0b00111111,0b00000110,0b01011011,0b01001111,0b01100110,0b01101101,0b01111101,0b00000111,0b01111111,0b01101111};
	DDRA=255;
	DDRB=255;
	DDRD=255;
	    void count(int start){
		    for(int i=start ;i>0;i--){
  c8:	21 50       	subi	r18, 0x01	; 1
  ca:	31 09       	sbc	r19, r1
  cc:	12 16       	cp	r1, r18
  ce:	13 06       	cpc	r1, r19
  d0:	e4 f2       	brlt	.-72     	; 0x8a <count.1732+0x8>
			    n1=i-n2*10;
				PORTA=sseg[n1];
				PORTB=sseg[n2];
				_delay_ms(500);
		    }
	    }
  d2:	3f 90       	pop	r3
  d4:	2f 90       	pop	r2
  d6:	08 95       	ret

000000d8 <main>:
#include <avr/io.h>
#include <avr/delay.h>
int main(void){
  d8:	cf 93       	push	r28
  da:	df 93       	push	r29
  dc:	cd b7       	in	r28, 0x3d	; 61
  de:	de b7       	in	r29, 0x3e	; 62
  e0:	2a 97       	sbiw	r28, 0x0a	; 10
  e2:	0f b6       	in	r0, 0x3f	; 63
  e4:	f8 94       	cli
  e6:	de bf       	out	0x3e, r29	; 62
  e8:	0f be       	out	0x3f, r0	; 63
  ea:	cd bf       	out	0x3d, r28	; 61
	char sseg [10]={0b00111111,0b00000110,0b01011011,0b01001111,0b01100110,0b01101101,0b01111101,0b00000111,0b01111111,0b01101111};
  ec:	8a e0       	ldi	r24, 0x0A	; 10
  ee:	e0 e6       	ldi	r30, 0x60	; 96
  f0:	f0 e0       	ldi	r31, 0x00	; 0
  f2:	de 01       	movw	r26, r28
  f4:	11 96       	adiw	r26, 0x01	; 1
  f6:	01 90       	ld	r0, Z+
  f8:	0d 92       	st	X+, r0
  fa:	8a 95       	dec	r24
  fc:	e1 f7       	brne	.-8      	; 0xf6 <main+0x1e>
	DDRA=255;
  fe:	8f ef       	ldi	r24, 0xFF	; 255
 100:	8a bb       	out	0x1a, r24	; 26
	DDRB=255;
 102:	87 bb       	out	0x17, r24	; 23
	DDRD=255;
 104:	81 bb       	out	0x11, r24	; 17
				PORTB=sseg[n2];
				_delay_ms(500);
		    }
	    }
    while (1) {
		PORTD=0b00000010;
 106:	82 e0       	ldi	r24, 0x02	; 2
 108:	82 bb       	out	0x12, r24	; 18
		count(30);
 10a:	ce 01       	movw	r24, r28
 10c:	01 96       	adiw	r24, 0x01	; 1
 10e:	1c 01       	movw	r2, r24
 110:	8e e1       	ldi	r24, 0x1E	; 30
 112:	90 e0       	ldi	r25, 0x00	; 0
 114:	0e 94 41 00 	call	0x82	; 0x82 <count.1732>
		PORTD=0b00000100;
 118:	84 e0       	ldi	r24, 0x04	; 4
 11a:	82 bb       	out	0x12, r24	; 18
		count(5);
 11c:	85 e0       	ldi	r24, 0x05	; 5
 11e:	90 e0       	ldi	r25, 0x00	; 0
 120:	0e 94 41 00 	call	0x82	; 0x82 <count.1732>
		PORTD=0b00001000;
 124:	88 e0       	ldi	r24, 0x08	; 8
 126:	82 bb       	out	0x12, r24	; 18
		count(30);
 128:	8e e1       	ldi	r24, 0x1E	; 30
 12a:	90 e0       	ldi	r25, 0x00	; 0
 12c:	0e 94 41 00 	call	0x82	; 0x82 <count.1732>
		PORTD=0b00000000;
 130:	12 ba       	out	0x12, r1	; 18
 132:	e9 cf       	rjmp	.-46     	; 0x106 <main+0x2e>

00000134 <__divmodhi4>:
 134:	97 fb       	bst	r25, 7
 136:	07 2e       	mov	r0, r23
 138:	16 f4       	brtc	.+4      	; 0x13e <__divmodhi4+0xa>
 13a:	00 94       	com	r0
 13c:	07 d0       	rcall	.+14     	; 0x14c <__divmodhi4_neg1>
 13e:	77 fd       	sbrc	r23, 7
 140:	09 d0       	rcall	.+18     	; 0x154 <__divmodhi4_neg2>
 142:	0e 94 ae 00 	call	0x15c	; 0x15c <__udivmodhi4>
 146:	07 fc       	sbrc	r0, 7
 148:	05 d0       	rcall	.+10     	; 0x154 <__divmodhi4_neg2>
 14a:	3e f4       	brtc	.+14     	; 0x15a <__divmodhi4_exit>

0000014c <__divmodhi4_neg1>:
 14c:	90 95       	com	r25
 14e:	81 95       	neg	r24
 150:	9f 4f       	sbci	r25, 0xFF	; 255
 152:	08 95       	ret

00000154 <__divmodhi4_neg2>:
 154:	70 95       	com	r23
 156:	61 95       	neg	r22
 158:	7f 4f       	sbci	r23, 0xFF	; 255

0000015a <__divmodhi4_exit>:
 15a:	08 95       	ret

0000015c <__udivmodhi4>:
 15c:	aa 1b       	sub	r26, r26
 15e:	bb 1b       	sub	r27, r27
 160:	51 e1       	ldi	r21, 0x11	; 17
 162:	07 c0       	rjmp	.+14     	; 0x172 <__udivmodhi4_ep>

00000164 <__udivmodhi4_loop>:
 164:	aa 1f       	adc	r26, r26
 166:	bb 1f       	adc	r27, r27
 168:	a6 17       	cp	r26, r22
 16a:	b7 07       	cpc	r27, r23
 16c:	10 f0       	brcs	.+4      	; 0x172 <__udivmodhi4_ep>
 16e:	a6 1b       	sub	r26, r22
 170:	b7 0b       	sbc	r27, r23

00000172 <__udivmodhi4_ep>:
 172:	88 1f       	adc	r24, r24
 174:	99 1f       	adc	r25, r25
 176:	5a 95       	dec	r21
 178:	a9 f7       	brne	.-22     	; 0x164 <__udivmodhi4_loop>
 17a:	80 95       	com	r24
 17c:	90 95       	com	r25
 17e:	bc 01       	movw	r22, r24
 180:	cd 01       	movw	r24, r26
 182:	08 95       	ret

00000184 <_exit>:
 184:	f8 94       	cli

00000186 <__stop_program>:
 186:	ff cf       	rjmp	.-2      	; 0x186 <__stop_program>
